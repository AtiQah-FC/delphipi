{**
 DelphiPI (Delphi Package Installer)
 Author  : ibrahim dursun (t-hex) thex [at] thexpot ((dot)) net
 License : GNU General Public License 2.0
**}
unit TestPackageInfo;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Classes, PackageInfo;
type
  // Test methods for class TPackageInfo
  
  TestTPackageInfo = class(TTestCase)
  private
  strict private
    FPackageInfo: TPackageInfo;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestDescription;
    procedure TestRequiresBlock;
    procedure TestContainsBlock;
    procedure TestPackageName;
    procedure TestSuffix;
    procedure TestRunOnly;
  end;

implementation
uses SysUtils, Forms;

procedure TestTPackageInfo.SetUp;
var
  path : string;
begin
  path := ExtractFilePath(Application.Exename) + '\testing\packages\';
  FPackageInfo := TPackageInfo.Create(path + 'p1.dpk');
end;

procedure TestTPackageInfo.TearDown;
begin
  FPackageInfo.Free;
  FPackageInfo := Nil;
end;

procedure TestTPackageInfo.TestContainsBlock;
begin
  CheckEquals('..\source\p1u1.pas',FPackageInfo.Contains[0]);
  //CheckEquals('Runtime2.pas',FPackageInfo.Contains[1]);

  CheckEquals(1,FPackageInfo.Contains.Count);
end;

procedure TestTPackageInfo.TestRunOnly;
begin
  CheckTrue(FPackageInfo.RunOnly);
end;

procedure TestTPackageInfo.TestSuffix;
begin
  CheckEquals('D10', FPackageInfo.Suffix);
end;

procedure TestTPackageInfo.TestPackageName;
begin
  CheckEquals('p1', FPackageInfo.PackageName);
end;

procedure TestTPackageInfo.TestDescription;
begin
  CheckEquals('Package1',FPackageInfo.Description);
end;

procedure TestTPackageInfo.TestRequiresBlock;
begin
  CheckEquals(4,FPackageInfo.Requires.Count);
  CheckEquals('rtl',FPackageInfo.Requires[0]);
  CheckEquals('vcl',FPackageInfo.Requires[1]);
  CheckEquals('p2',FPackageInfo.Requires[2]);
  CheckEquals('p3',FPackageInfo.Requires[3]);
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTPackageInfo.Suite);
end.

