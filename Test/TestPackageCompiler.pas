{**
 DelphiPI (Delphi Package Installer)
 Author  : ibrahim dursun (t-hex) thex [at] thexpot ((dot)) net
 License : GNU General Public License 2.0
**}
unit TestPackageCompiler;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, JclBorlandTools, PackageCompiler, PackageInfo;
type
  // Test methods for class TPackageCompiler
  TPackageCompilerHack = class(TPackageCompiler);
  TestTPackageCompiler = class(TTestCase)
  strict private
    FPackageCompiler: TPackageCompilerHack;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestGetShortPaths;
//    procedure TestCompilePackage;
//    procedure TestInstallPackage;
  end;

implementation

procedure TestTPackageCompiler.SetUp;
begin
  FPackageCompiler := TPackageCompilerHack.Create(nil);
end;

procedure TestTPackageCompiler.TearDown;
begin
  FPackageCompiler.Free;
  FPackageCompiler := nil;
end;

procedure TestTPackageCompiler.TestGetShortPaths;
var
  ReturnValue: string;
  paths: string;
begin
  paths := '"c:\Program Files\CodeGear\RAD Studio\5.0\lib\debug\Indy10\";C:\Program Files\Code Gear\Rad Studio\';
  ReturnValue := FPackageCompiler.GetShortPaths(paths);
  CheckEqualsString('"c:\PROGRA~1\CodeGear\RADSTU~1\5.0\lib\debug\Indy10\";"C:\Program Files\Code Gear\Rad Studio\";',ReturnValue);
end;

//procedure TestTPackageCompiler.TestCompilePackage;
//var
//  ReturnValue: Boolean;
//  packageInfo: TPackageInfo;
//begin
//  // TODO: Setup method call parameters
//  ReturnValue := FPackageCompiler.CompilePackage(packageInfo);
//  // TODO: Validate method results
//end;
//
//procedure TestTPackageCompiler.TestInstallPackage;
//var
//  ReturnValue: Boolean;
//  packageInfo: TPackageInfo;
//begin
//  // TODO: Setup method call parameters
//  ReturnValue := FPackageCompiler.InstallPackage(packageInfo);
//  // TODO: Validate method results
//end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTPackageCompiler.Suite);
end.

